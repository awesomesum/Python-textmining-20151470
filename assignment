# Bio Data Analysis
Assignment 20151470 Sumin Lee <br /> 
- email address : awesomesum@naver.com <br />

## Assignment 
This is a python code for text mining.
1. This is to know the link between disease and certain genes.
2. I chose melanoma.
3. I used Wing 101 7.2
4. I recommend using Wing 101 7.2
5. genes.txt must be in the same folder.

## Code
```python
from Bio import Entrez



def probability(abstracts, keywords):
        p = 0.0
        count = 0.0
        total = len(abstracts)
        
        for words in abstracts:
                has_terms = True
                for t in keywords:
                        if not t in words:
                                has_terms = False
                if has_terms:
                        count = count + 1
                        
        return count/total





kegg_names = {}
name_kegg = {}

f=open('genes.txt' , 'r')
for line in f.readlines():
    
        t1 = line.split(';')[0]
        t2 = t1.split('\t')
        kegg_id = t2[0]
        kegg_names[kegg_id] = []
        for name in t2[1].split(','):
                name = name.strip()
                kegg_names[kegg_id].append(name)
                name_kegg[name] = kegg_id
                
                
f.close()



disease = 'Melanoma'.upper()

print('Download abstracts....')

Entrez.email = 'your_email@test.com'

handle = Entrez.esearch(db='pubmed', term=disease, retmax=20000)
record = Entrez.read(handle)

downloaded_abstracts = []


cnt = 0
for pubmed_id in record['IdList']:
        cnt = cnt + 1
        
        print (cnt, '/', len(record['IdList']))
        
        abstract = Entrez.efetch('pubmed', id=pubmed_id, retmode='text', rettype='abstracts').read()
        downloaded_abstracts.append(abstract) 
       
       
       
keywords_in_abstract = []
for ab in downloaded_abstracts:
        keyword_box = []
        words = ab.replace('.','').split(' ')
        for w in words:
                if w.upper() == disease:
                        keyword_box.append(w.upper())
                else:
                        if w in name_kegg:
                                keyword_box.append( name_kegg[w] )
                                
        keywords_in_abstract.append(keyword_box)
        
        
        
print('Calculating MI....')

scores = {}

p_disease = probability(keywords_in_abstract, [disease])
for kegg_id in kegg_names:
        p_gene = probability(keywords_in_abstract, [kegg_id])
        p_gene_disease = probability(keywords_in_abstract, [kegg_id, disease])
        
        if p_gene !=0 and p_disease != 0 and p_gene_disease !=0:
                import math
                mi = math.log2( p_gene_disease / (p_gene * p_disease  )  )
                scores[ kegg_names[kegg_id][0] ] = mi


                
f2=open('results.txt', 'w')
for key in sorted (scores, key=scores.__getitem__, reverse=True):
        f2.write(key + '\t' + str(scores[key]) + '\n')
        print(key + '\t' + str(scores[key]))
        
f2.close()
```

## License
MIT License

Copyright (c) [2020] [Sumin Lee]

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.
